{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang2057{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Arial;}{\f2\fnil\fcharset1 Cambria Math;}{\f3\fnil Arial;}{\f4\fnil\fcharset1 Segoe UI Emoji;}{\f5\fnil\fcharset0 Cambria;}{\f6\fnil\fcharset1 Segoe UI Symbol;}{\f7\fnil Cambria;}{\f8\fnil\fcharset0 Cambria Math;}}
{\colortbl ;\red54\green95\blue145;\red79\green129\blue189;\red255\green0\blue0;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mmathFont2\mwrapIndent1440 }\viewkind4\uc1 
\pard\keep\keepn\sb480\sl276\slmult1\cf1\b\f0\fs28\lang9\par
\par

\pard\sa200\sl276\slmult1\cf0\f1\fs24 15.What is event bubbling and event capturing?\par

\pard\sl276\slmult1\b0\lang16393 Event bubbling propagates the event from the target element up to the root, while event capturing (also called trickling) propagates the event from the root down to the target element.\line\line\b Direction\b0 : Event Capturing flows from top to target (outer \f2\u8594?\f3  \f1 inner), while Event Bubbling flows from target to top (inner \f2\u8594?\f3  \f1 outer).\par
\b Order of Handling\b0 : Capturing handles parent first then child, bubbling handles child first then parent.\par
\b Default Behavior\b0 : Capturing is not default; bubbling is the default in JavaScript.\par

\pard\sa200\sl276\slmult1\line\line\b\lang9 16. What is event delegation in JavaScript?\b0 Event delegation is a technique where a single event listener is added to a parent element to handle events on its child elements using event bubbling.\par
\par
\b 15. How does event delegation improve performance?\line\b0 Event delegation improves performance by reducing the number of event listeners, handling all child events with a single listener on the parent, which minimizes memory usage and speeds up event handling\f3\emdash\f1 especially for dynamic or many elements.\line\cf1\b\f0\fs28\par

\pard\keep\keepn\sb480\sl276\slmult1 JavaScript Interview Questions (Basic to Advanced)\par

\pard\keep\keepn\sb200\sl276\slmult1\cf2\f4\fs26\u-10179?\u-8222?\f0  Basic Level JavaScript Interview Questions\par

\pard\sa200\sl276\slmult1\cf0\b0\f5\fs22 1. What is JavaScript and its role in web development?\par
2. Is JavaScript statically typed or dynamically typed?\par
3. What are the different data types in JavaScript?\par
4. What is the DOM (Document Object Model)?\par
5. What is strict mode in JavaScript \par
6. What is the NaN property in JavaScript?\par
7. What are JavaScript truthy and falsy values?\par
8. What is the difference between var, let, and const?\par
9. Explain hoisting in JavaScript.\par
10. Explain the scope of variables in JavaScript.\par
11. What is the Temporal Dead Zone (TDZ)?\par
12. What is the difference between == and === operators?\par
13. What is implicit type coercion in JavaScript?\par
14. Explain the difference between value types and reference types.\par
15. Explain the this keyword in JavaScript and its use cases.\par
16. What are first-class functions in JavaScript?\par
17. What are higher-order functions in JavaScript?\par
18. What is an anonymous function? \par
19. What are arrow functions?\par
20. What is the difference between arrow functions and regular functions?\par
21. What are generator functions?\par
22. What is the use of a constructor function in JavaScript?\par
23. What is an IIFE (Immediately Invoked Function Expression)?\par
24. What is the difference between slice() and splice()?\par
25. Explain important JavaScript array methods.\par
26. What is object destructuring?\par
27. What is the difference between deep copy and shallow copy?\par
28. What do mutability and immutability mean?\par
29. What are Object.freeze() and Object.seal()?\par

\pard\keep\keepn\sb200\sl276\slmult1\cf2\b\f4\fs26\u-10179?\u-8223?\f0  Intermediate Level JavaScript Interview Questions\par

\pard\sa200\sl276\slmult1\cf0\b0\f5\fs22 1. How do you handle errors in JavaScript?\par
2. What are the types of errors in JavaScript?\par
3. What is prototypal inheritance in JavaScript?\par
4. What are JavaScript classes?Key Features of Classes?\par
5. What is OOP (Object-Oriented Programming) in JavaScript?\par
6. What are the possible ways to create objects in JavaScript?\par
7. What are closures in JavaScript?Why Are Closures Useful?\par
8. What is memoization?\par
9. What are pure and impure functions?\par
10. What is currying in JavaScript?Why Use Currying?\par
11. What are call(), apply(), and bind() methods?\par
12. What is the rest parameter?\par
13. What is the difference between the rest (...args) and spread (...array) operators?\par
14. What is the purpose of the defer keyword in a <script> tag?\par
15. What is the difference between local storage, session storage, and cookies?\par
16. What is the call stack and the task queue ?\par
17. Explain JavaScript's single-threaded model and the role of the call stack and event loop.\par
18. What is the event loop in JavaScript?\par
19. What is the difference between the call stack and the event queue?\par
20. How does JavaScript handle asynchronous operations?\par
21. What is event bubbling and event capturing?\par
22. What is event delegation in JavaScript?\par
23. How does event delegation improve performance?\par
24. Why do we use callbacks?\par
25. What is callback hell, and how do we avoid it?\par
26. What are promises in JavaScript?\par
27. What are the different states of a promise?\par
28. What is the difference between Promise.all() and Promise.allSettled()?\par
29. How does Promise.all() work and what are its use cases?\par
30. What happens if one of the promises in Promise.all() fails? (with example)\par
31. How do promises handle asynchronous code? Show chaining with .then().\par
32. What is the difference between promise chaining and async/await?\par
33. How do async and await work? Provide an example.\par
34. What is a WeakMap in JavaScript?\par
35. What is meant by 'loose reference' in JavaScript?\par
36. What is a WeakSet in JavaScript?\par
37. What is a polyfill in JavaScript?Why Use Polyfills?\par
38. What is ES6, and what are its key features?\par
39. Define a transpiler and a compiler in the context of JavaScript.\par

\pard\keep\keepn\sb200\sl276\slmult1\cf2\b\f6\fs26\u-10179?\u-8908?\f0  Advanced Level JavaScript Interview Questions\par

\pard\sa200\sl276\slmult1\cf0\b0\f5\fs22 1. What is the difference between debouncing and throttling?\par
2. What is debouncing and how does it work?\par
3. What is throttling and how does it work?\par
5. How to create a custom promise?\par

\pard\sa200\sl276\slmult1\tx360\f0\fs24\par
\cf3\ul\b\fs32 Html&CSS Implementation\par

\pard\keep\keepn\sb200\sl276\slmult1\cf2\ulnone\fs26 1. How to center a child box inside a parent box?\par
2. How to stick the Navbar at the top position\par
3. Explain different use cases of CSS Flexbox and provide examples.\par
4. Write the HTML code to create a simple table.\par
5. What is the difference between `display: flex` and `display: grid`? Can you give examples of when each is ideal?\par
6. what are all properties we have in grid and flex?\par
7. Explain the flex properties `justify-content`, `align-items`, and `flex-direction`. How would you create a centered layout using Flexbox?\par
8. How would you implement a two-column layout using Flexbox?\par

\pard\sa200\sl276\slmult1\tx360\cf0\b0\fs24\par

\pard\sa200\sl276\slmult1\cf3\ul\b\fs32 JavaScript IMPLEMENTATION\par
\cf0\ulnone\f5\fs24 1. Explain how to chain promises and resolve an array of promises in JavaScript?\par
2.Provide an example of how to create a promise and handle its resolve and reject states.\par
3. Given the input [\{a:1\},\{b:2\},\{c:\{d:\{f:3\}\}\},\{g:\{h:4\}\},\{i:5\}], write a function to flatten the object to \{a:1,b:2,f:3,h:4,i:5\}.\par
4. How would you find and count the occurrence of each character in an array of strings?\par
5. Write a function to check if a given input is an array.\par
6. Given an array of student objects, how would you group them by age?\par
7. How would you reverse each word in a sentence? Can you explain your approach with code?\par
8. Write a function that capitalizes the first letter of each word in a string. How does it handle different cases (like strings with extra spaces)?\par
9. Group Users by AgeProblem Statement:**You are given an array of objects, where each object contains a\f7\~\f5 `user`\f7\~\f5 (string) and\f7\~\f5 `age`\f7\~\f5 (number). Write a function that groups all users by their age. The result should be an object where each key is an age and the value is an array of users who have that age\par
\lang2057 10.Capitalize Each Word in a SentenceProblem Statement:Write a function that takes a string as input and returns a new string where the first letter of each word is capitalized. Words are separated by one or more spaces.\lang9\par
\b0\f8    \par

\pard\sb100\sa100\sl240\slmult1\f5\line\line\b\f0\fs28 JavaScript interview question\b0\fs22\par
{\b\fs28{\field{\*\fldinst{HYPERLINK https://better-tamarillo-d08.notion.site/Theory-1364ba51266c80d8a04ce1012ec574da }}{\fldrslt{https://better-tamarillo-d08.notion.site/Theory-1364ba51266c80d8a04ce1012ec574da\ul0\cf0}}}}\b\f0\fs28\par
{{\field{\*\fldinst{HYPERLINK https://saber-columnist-50d.notion.site/Javascript-945c273e4c09494780e96cafee5124b0 }}{\fldrslt{https://saber-columnist-50d.notion.site/Javascript-945c273e4c09494780e96cafee5124b0\ul0\cf0}}}}\f0\fs28\par
\par
JavaScript notes and html CSS and JavaScript interview question.\par

\pard\sa160\sl276\slmult1 {\b0\i\fs22{\field{\*\fldinst{HYPERLINK https://saber-columnist-50d.notion.site/Javascript-Student-Notes-62d52c36b9b54dd4a27f066b31e688fd }}{\fldrslt{https://saber-columnist-50d.notion.site/Javascript-Student-Notes-62d52c36b9b54dd4a27f066b31e688fd\ul0\cf0}}}}\b0\f1\fs22\par

\pard\sa200\sl276\slmult1\tx360 {\f5\fs24{\field{\*\fldinst{HYPERLINK https://better-tamarillo-d08.notion.site/JavaScript-1364ba51266c80eb9e46df9edd46dd06 }}{\fldrslt{https://better-tamarillo-d08.notion.site/JavaScript-1364ba51266c80eb9e46df9edd46dd06\ul0\cf0}}}}\f5\fs24\par

\pard\sa200\sl276\slmult1\f0\lang2057\par
}
 